---
# tasks file for lambda# Update Lambda functions for a given environment.
- name: "Create working directory."
  file:
    path: "{{ lambda_working_directory }}"
    state: directory

- name: "Copy over all of the source files."
  template:
    src:  "{{ item }}"
    dest: "{{ lambda_working_directory }}/{{ item | basename | regex_replace('.j2','') }}"
  with_fileglob: "{{ lambda_source_directory }}/*"

- name: "[Python] install requirements."
  pip:
    requirements: "{{ requirements_file }}"
    extra_args: "-t {{ lambda_working_directory }}"
  when: lambda_runtime == "python2.7"

- name: "[Nodejs] process requirements using npm."
  npm:
    path: "{{ lambda_working_directory }}"
  when: lambda_runtime == "nodejs4.3"

- name: "Create the zip file."
  archive:
    path: "{{ lambda_working_directory }}/*"
    dest: "{{ lambda_archive_file }}"
    format: "{{ lambda_archive_type }}"

- name: "Ensure lambda function {{ lambda_function_name }} is {{ lambda_state }}."
  lambda:
    name: "{{ lambda_function_name }}"
    zip_file: "{{ lambda_archive_file }}"
    runtime: "{{ lambda_runtime }}"
    role: "{{ lambda_role }}"
    handler: "{{ lambda_handler }}"
    vpc_subnet_ids: "{{ lambda_vpc_subnet_ids }}"
    vpc_security_group_ids: "{{ lambda_vpc_security_group_ids }}"
    memory_size: "{{ lambda_memory_size }}"
    description: "{{ lambda_description }}"
    state: "{{ lambda_state }}"
    environment_variables: "{{ lambda_env_vars }}"
  register: lambda_output

- name: "Ensure lambda policies."
  lambda_policy:
    function_name: "{{ lambda_function_name }}"
    statement_id: "{{ item.policy_statement_id }}"
    action: "{{ item.policy_action }}"
    principal: "{{ item.policy_principal }}"
    source_arn: "{{ item.policy_source_arn }}"
    state: "{{ item.policy_state }}"
  with_items: "{{ lambda_policies }}"
  when: lambda_apply_policy

- name: "Delete working directory."
  file:
    path: "{{ lambda_working_directory }}"
    state: absent

  # NOTE: Regex is necessary because aws appends a :NUMBER at the end of the arn.
- name: "Capture the lambda's arn."
  set_fact:
    lambda_function_arn: "{{ lambda_output.configuration.function_arn | regex_replace(':[1-9][0-9]*$','') }}"
